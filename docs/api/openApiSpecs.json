{
  "openapi": "3.0.0",
  "info": {
    "title": "Blog API Documentation",
    "description": "API documentation for the Blog app",
    "version": "1.0.0",
    "servers": {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  },
  "basePath": "/",
  "apis": [
    "./src/**/*.route.js"
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "components/auth/requestContract.json#/UserLogin"
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "components/auth/responseContract.json#/successfulLogin"
          },
          "401": {
            "$ref": "components/errorContract.json#/incorrectPassword"
          },
          "500": {
            "$ref": "components/errorContract.json#/authenticationFailed"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User signup",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "components/auth/requestContract.json#/UserSignUp"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "components/auth/responseContract.json#/successfulSignup"
          },
          "400": {
            "$ref": "components/errorContract.json#/passwordAndConfirmPasswordDoNotMatch"
          },
          "409": {
            "$ref": "components/errorContract.json#/userAlreadyExists"
          },
          "500": {
            "$ref": "components/errorContract.json#/failedToRegisterUser"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User logout",
        "responses": {
          "204": {
            "$ref": "components/auth/responseContract.json#/successfulLogout"
          },
          "400": {
            "$ref": "components/errorContract.json#/userHasNotLogin"
          },
          "500": {
            "$ref": "components/errorContract.json#/logoutFailed"
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Forgot password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "components/auth/requestContract.json#/ForgotPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "components/auth/responseContract.json#/passwordResetEmailSent"
          },
          "404": {
            "$ref": "components/errorContract.json#/userNotFound"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "components/auth/requestContract.json#/ResetPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "components/auth/responseContract.json#/passwordResetSuccessful"
          },
          "400": {
            "$ref": "components/errorContract.json#/badRequest"
          },
          "404": {
            "$ref": "components/errorContract.json#/userNotFound"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      }
    },
    "/blog/blogs": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Get all blogs",
        "responses": {
          "200": {
            "$ref": "components/blog/responseContract.json#/successfulRetrievalOfAllBlogs"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Blog"
        ],
        "summary": "Add a blog",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "components/blog/requestContract.json#/AddBlog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "components/blog/responseContract.json#/successfulAdditionOfBlog"
          },
          "401": {
            "$ref": "components/errorContract.json#/unauthorized"
          },
          "409": {
            "$ref": "components/errorContract.json#/blogAlreadyExist"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      }
    },
    "/blog/blogs/search": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Search blogs",
        "parameters": [
          {
            "in": "query",
            "name": "searchString",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "components/blog/responseContract.json#/successfulRetrievalOfSearchResults"
          },
          "400": {
            "$ref": "components/errorContract.json#/badRequest"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      }
    },
    "/blog/blogs/myblogs": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Get user's blogs",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "components/blog/responseContract.json#/successfulRetrievalOfUserBlogs"
          },
          "401": {
            "$ref": "components/errorContract.json#/unauthorized"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      }
    },
    "/blog/blogs/:blogId": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Get an blog by its ID",
        "parameters": [
          {
            "in": "path",
            "name": "blogId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "components/blog/responseContract.json#/successfulRetrievalOfBlog"
          },
          "404": {
            "$ref": "components/errorContract.json#/blogNotFound"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Blog"
        ],
        "summary": "Edit a blog",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "blogId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "components/blog/requestContract.json#/UpdateBlog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "components/blog/responseContract.json#/successfulUpdateOfBlog"
          },
          "400": {
            "$ref": "components/errorContract.json#/badRequest"
          },
          "401": {
            "$ref": "components/errorContract.json#/unauthorized"
          },
          "404": {
            "$ref": "components/errorContract.json#/blogNotFound"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Blog"
        ],
        "summary": "Delete a blog",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "blogId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "components/blog/responseContract.json#/successfulDeletionOfBlog"
          },
          "400": {
            "$ref": "components/errorContract.json#/badRequest"
          },
          "401": {
            "$ref": "components/errorContract.json#/unauthorized"
          },
          "404": {
            "$ref": "components/errorContract.json#/blogNotFound"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      }
    },
    "/blog/blogs/categories/:categoryId": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Get blogs by category",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "components/blog/responseContract.json#/successfulRetrievalOfBlogsByCategory"
          },
          "404": {
            "$ref": "components/errorContract.json#/blogNotFound"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      }
    },
    "/comment/blogs/:blogId/comments": {
      "get": {
        "tags": [
          "Comment"
        ],
        "summary": "Get all comments",
        "parameters": [
          {
            "in": "path",
            "name": "blogId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "components/comment/responseContract.json#/successfulRetrievalOfComments"
          },
          "401": {
            "$ref": "components/errorContract.json#/unauthorized"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Comment"
        ],
        "summary": "Add a comment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "blogId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "components/comment/requestContract.json#/AddComment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "components/comment/responseContract.json#/successfulAdditionToComment"
          },
          "400": {
            "$ref": "components/errorContract.json#/invalidRequest"
          },
          "401": {
            "$ref": "components/errorContract.json#/unauthorized"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      }
    },
    "/comment/blogs/:blogId/comments/:commentId": {
      "put": {
        "tags": [
          "Comment"
        ],
        "summary": "Edit a comment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "blogId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "commentId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "components/comment/requestContract.json#/AddComment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "components/comment/responseContract.json#/successfulUpdationOfComment"
          },
          "400": {
            "$ref": "components/errorContract.json#/invalidRequest"
          },
          "401": {
            "$ref": "components/errorContract.json#/unauthorized"
          },
          "404": {
            "$ref": "components/errorContract.json#/commentNotFound"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Comment"
        ],
        "summary": "Delete a comment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "blogId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "commentId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "components/comment/responseContract.json#/successfulDeletionOfComment"
          },
          "401": {
            "$ref": "components/errorContract.json#/unauthorized"
          },
          "404": {
            "$ref": "components/errorContract.json#/commentNotFound"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      }
    },
    "/user/users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get all users",
        "responses": {
          "200": {
            "$ref": "components/user/responseContract.json#/successfulRetrievalOfAllUsers"
          },
          "401": {
            "$ref": "components/errorContract.json#/unauthorized"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Add a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "components/user/requestContract.json#/AddUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "components/user/responseContract.json#/successfulAdditionOfUser"
          },
          "401": {
            "$ref": "components/errorContract.json#/unauthorized"
          },
          "409": {
            "$ref": "components/errorContract.json#/userAlreadyExist"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      }
    },
    "/user/users/email": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get user by email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "components/user/requestContract.json#/GetUserByEmail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "components/user/responseContract.json#/successfulRetrievalOfUserByEmail"
          },
          "401": {
            "$ref": "components/errorContract.json#/unauthorized"
          },
          "404": {
            "$ref": "components/errorContract.json#/userNotFound"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      }
    },
    "/user/users/:id": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get user by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "userId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "components/user/responseContract.json#/successfulRetrievalOfUserById"
          },
          "401": {
            "$ref": "components/errorContract.json#/unauthorized"
          },
          "404": {
            "$ref": "components/errorContract.json#/userNotFound"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Edit a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "userId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "components/user/requestContract.json#/UpdateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "components/user/responseContract.json#/successfulUpdationOfUser"
          },
          "400": {
            "$ref": "components/errorContract.json#/invalidRequest"
          },
          "401": {
            "$ref": "components/errorContract.json#/unauthorized"
          },
          "404": {
            "$ref": "components/errorContract.json#/userNotFound"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "userId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "components/user/responseContract.json#/successfulDeletionOfUser"
          },
          "401": {
            "$ref": "components/errorContract.json#/unauthorized"
          },
          "404": {
            "$ref": "components/errorContract.json#/userNotFound"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      }
    },
    "/user/users/change-password": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Change user's password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "components/user/requestContract.json#/UpdateUserPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "components/user/responseContract.json#/successfulUpdationOfUserPassword"
          },
          "400": {
            "$ref": "components/errorContract.json#/invalidRequest"
          },
          "401": {
            "$ref": "components/errorContract.json#/unauthorized"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      }
    },
    "/user/users/change-name": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Change user's name",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "components/user/requestContract.json#/UpdateUserName"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "components/user/responseContract.json#/successfulUpdationOfUserName"
          },
          "400": {
            "$ref": "components/errorContract.json#/invalidRequest"
          },
          "401": {
            "$ref": "components/errorContract.json#/unauthorized"
          },
          "500": {
            "$ref": "components/errorContract.json#/internalServerError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication endpoints"
    },
    {
      "name": "Blog",
      "description": "Blog endpoints"
    },
    {
      "name": "Comment",
      "description": "Comment endpoints"
    },
    {
      "name": "Admin",
      "description": "Admin endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    }
  ]
}